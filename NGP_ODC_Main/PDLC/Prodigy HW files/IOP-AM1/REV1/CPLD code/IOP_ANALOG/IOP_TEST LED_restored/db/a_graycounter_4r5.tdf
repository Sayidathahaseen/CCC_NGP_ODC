--a_graycounter DEVICE_FAMILY="MAX II" WIDTH=4 aclr clock cnt_en q
--VERSION_BEGIN 9.1 cbx_a_gray2bin 2009:10:21:21:22:16:SJ cbx_a_graycounter 2009:10:21:21:22:16:SJ cbx_cycloneii 2009:10:21:21:22:16:SJ cbx_mgl 2009:10:21:21:37:49:SJ cbx_stratix 2009:10:21:21:22:16:SJ cbx_stratixii 2009:10:21:21:22:16:SJ  VERSION_END


-- Copyright (C) 1991-2009 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.



--synthesis_resources = lut 5 
OPTIONS ALTERA_INTERNAL_OPTION = "{-to parity7} POWER_UP_LEVEL=HIGH";

SUBDESIGN a_graycounter_4r5
( 
	aclr	:	input;
	clock	:	input;
	cnt_en	:	input;
	q[3..0]	:	output;
) 
VARIABLE 
	counter8a[3..0] : dffeas;
	parity7 : dffeas
		WITH (
			power_up = "high"
		);
	cntr_cout[3..0]	: WIRE;
	parity_cout	: WIRE;
	sclr	: NODE;
	updown	: NODE;

BEGIN 
	counter8a[].clk = clock;
	counter8a[].clrn = ( (! aclr), (! aclr), (! aclr), (! aclr));
	counter8a[].d = ( (counter8a[3].q $ cntr_cout[2..2]), (counter8a[2].q $ (counter8a[1].q & cntr_cout[1..1])), (counter8a[1].q $ (counter8a[0].q & cntr_cout[0..0])), ((cnt_en & (counter8a[0].q $ (! parity_cout))) # ((! cnt_en) & counter8a[0].q)));
	counter8a[].sclr = sclr;
	parity7.clk = clock;
	parity7.d = ((cnt_en & (((counter8a[0..0].q $ counter8a[1..1].q) $ counter8a[2..2].q) $ counter8a[3..3].q)) # ((! cnt_en) & parity7.q));
	parity7.prn = (! aclr);
	parity7.sclr = sclr;
	cntr_cout[] = ( B"0", (cntr_cout[1..1] & (! counter8a[1].q)), (cntr_cout[0..0] & (! counter8a[0].q)), (cnt_en & parity_cout));
	parity_cout = (((! parity7.q) $ (! updown)) & cnt_en);
	q[] = counter8a[].q;
	sclr = GND;
	updown = VCC;
END;
--VALID FILE
